@use "sass:math";

@mixin default-font() {
  font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans,
    Ubuntu, Cantarell, "Helvetica Neue", sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
    "Segoe UI Symbol", sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

@mixin retina($file, $type, $width, $height) {
  $image: ($file + "_1x." + $type);
  $size: $width $height;

  background-image: url($image);
  background-size: $size;

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    $image2x: ($file + "_2x." + $type);
    background-image: url($image2x);
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin fixed-container($width: 1050px) {
  max-width: $width;
  margin: auto;
  padding: 0 30px;
  box-sizing: border-box;

  @include for-size(lte-phone) {
    padding-left: 20px;
    padding-right: 20px;
  }
}

// Responsive mixin taken from: https://medium.freecodecamp.org/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862
@mixin for-size($range) {
  $phone-small-upper-boundary: 340px;
  $phone-upper-boundary: 600px;
  $tablet-portrait-upper-boundary: 900px;
  $tablet-landscape-upper-boundary: 1200px;
  $desktop-upper-boundary: 1800px;

  @if $range == lte-phone-small {
    @media (max-width: #{$phone-small-upper-boundary}) {
      @content;
    }
  } @else if $range == lte-phone {
    @media (max-width: #{$phone-upper-boundary}) {
      @content;
    }
  } @else if $range == gt-phone {
    @media (min-width: $phone-upper-boundary + 1) {
      @content;
    }
  } @else if $range == lte-tablet {
    @media (max-width: $tablet-landscape-upper-boundary) {
      @content;
    }
  } @else if $range == lte-tablet-portrait {
    @media (max-width: $tablet-portrait-upper-boundary) {
      @content;
    }
  } @else if $range == gt-tablet-portrait {
    @media (min-width: $tablet-portrait-upper-boundary + 1) {
      @content;
    }
  }
}

@mixin custom-scrollbars-inplace(
  $track: var(--color-background),
  $thumb: var(--color-scrollbar)
) {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
    z-index: 100;
  }

  &::-webkit-scrollbar-track {
    background: $track;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb;
    border-radius: 3px;

    &:hover {
      // background: darken(var(--color-scrollbar), 3%);
    }

    &:active {
      // background: darken(var(--color-scrollbar), 6%);
    }
  }

  &::-webkit-scrollbar-corner {
    background: $track;
  }
}

@mixin spinner-animation($duration: 1s) {
  animation: spin $duration linear infinite;
  -webkit-animation: spin $duration linear infinite;

  @keyframes spin {
    to {
      -webkit-transform: rotate(360deg);
    }
  }
  @-webkit-keyframes spin {
    to {
      -webkit-transform: rotate(360deg);
    }
  }
}

@mixin focus-ring($color, $weight: 1px) {
  &::after {
    $padding: -1px;

    content: "";
    display: block;
    position: absolute;
    z-index: 100;
    top: $padding;
    left: $padding;
    right: $padding;
    bottom: $padding;
    border-radius: 5px;
    pointer-events: none;
    border: $weight solid $color;
  }
}

@mixin margin-between($size) {
  margin-right: $size;

  &:last-child {
    margin-right: 0;
  }
}

@mixin text-ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin max-lines-ellipsis($lines: 2) {
  word-wrap: break-word;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}

@mixin absolute-centered($width, $height) {
  width: $width;
  height: $height;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: math.div(-$width, 2);
  margin-top: math.div(-$height, 2);
}

@mixin monospace-font() {
  font-family: Monaco, monospace;
}

@mixin user-select($value) {
  user-select: $value;
  -webkit-user-select: $value;
}

@mixin non-selectable() {
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Chrome/Safari/Opera */
  -khtml-user-select: none;
  /* Konqueror */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
}

@mixin dark-mode() {
  &:global(.dark-mode),
  :global(.dark-mode) & {
    @content;
  }
}

@mixin table-row-spacer() {
  &:after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 8px;
    height: 1px;
    background: var(--color-background-table);
  }
}

@mixin space() {
  > * {
    margin-right: $size;

    &:last-child {
      margin-right: 0;
    }
  }
}

@mixin space($size) {
  > * {
    margin-right: $size;

    &:last-child {
      margin-right: 0;
    }
  }
}

@mixin space-vertical($size) {
  > * {
    margin-bottom: $size;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin divider($color) {
  > * {
    border-right: 1px solid $color;

    &:last-child {
      border-right: none;
    }
  }
}
